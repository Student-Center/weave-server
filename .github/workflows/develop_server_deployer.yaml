name: Develop Server Deployer (CD)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version tag (e.g., 0.2411.135 or latest)'
        required: true
        default: 'latest'

jobs:
  deploy:
    needs: validate_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Send discord notification (develop server deploy start)
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DEVELOP_SERVER_RELEASE_DISCORD_NOTI_ID }}
          webhook_token: ${{ secrets.DEVELOP_SERVER_RELEASE_DISCORD_NOTI_TOKEN_SECRET }}
          message: |
            üõ∞Ô∏è Server Deployment Start (Dev)
            
            üõ¢Ô∏è Repository  : ${{ github.repository }}
            üéã Branch      : ${{ github.ref }}
            üìê Version     : ${{ github.event.inputs.version }}
            üîÅ Run Attempt : ${{ github.run_attempt }}
            ü§ó Actor       : ${{ github.triggering_actor }}

      - name: Copy Docker Compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_INSTANCE_HOST }}
          username: ${{ secrets.DEV_INSTANCE_USERNAME }}
          key: ${{ secrets.DEV_INSTANCE_PEM_KEY }}
          source: "./bootstrap/http/compose-dev.yaml"
          target: "~/app"
          overwrite: true

      - name: Install Docker if not present
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_INSTANCE_HOST }}
          username: ${{ secrets.DEV_INSTANCE_USERNAME }}
          key: ${{ secrets.DEV_INSTANCE_PEM_KEY }}
          script: |
            if ! command -v docker >/dev/null 2>&1; then
              echo "Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y docker.io
            else
              echo "Docker already installed."
            fi

            if ! command -v docker-compose >/dev/null 2>&1; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            else
              echo "Docker Compose already installed."
            fi

      - name: Configuration Env file
        uses: appleboy/ssh-action@master
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        with:
          host: ${{ secrets.DEV_INSTANCE_HOST }}
          username: ${{ secrets.DEV_INSTANCE_USERNAME }}
          key: ${{ secrets.DEV_INSTANCE_PEM_KEY }}
          envs: SECRETS_CONTEXT
          script: |
            cd ~/app/bootstrap/http
            jq -r 'to_entries | map(select(.key != "DEV_INSTANCE_PEM_KEY") | "\(.key)=\(.value)") | .[]' <<< "$SECRETS_CONTEXT" > .env

      - name: Set deployed image version
        id: set_version
        run: echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

      - name: Run Docker Compose up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_INSTANCE_HOST }}
          username: ${{ secrets.DEV_INSTANCE_USERNAME }}
          key: ${{ secrets.DEV_INSTANCE_PEM_KEY }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker-compose -f ~/app/bootstrap/http/compose-dev.yaml pull
            sudo VERSION=${{ github.event.inputs.version }} docker-compose -f ~/app/bootstrap/http/compose-dev.yaml up -d --force-recreate

      - name: Create tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          script: |
            const version = '${{ steps.set_version.outputs.version }}';
            const tag = `dev-${version}`;
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: context.sha
              });
              console.log(`Tag ${tag} created successfully.`);
            } catch (error) {
              if (error.status === 422) {
                console.log(`Tag ${tag} already exists. Skipping tag creation.`);
              } else {
                throw error;
              }
            }

      - name: Send discord notification (develop server deploy complete)
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DEVELOP_SERVER_RELEASE_DISCORD_NOTI_ID }}
          webhook_token: ${{ secrets.DEVELOP_SERVER_RELEASE_DISCORD_NOTI_TOKEN_SECRET }}
          message: |
            üõ∞Ô∏è Server Deployment Complete (Dev)
            
            üõ¢Ô∏è Repository  : ${{ github.repository }}
            üéã Branch      : ${{ github.ref }}
            üìê Version     : ${{ github.event.inputs.version }}
            üîÅ Run Attempt : ${{ github.run_attempt }}
            ü§ó Actor       : ${{ github.triggering_actor }}

  validate_version:
    runs-on: ubuntu-latest
    steps:
      - name: Validate version format
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^(latest|[0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "Version format is valid"
          else
            echo "Invalid version format. Use 'latest' or semver format (e.g., 0.2411.135)"
            exit 1
          fi
